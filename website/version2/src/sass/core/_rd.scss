@charset "UTF-8";

//Responsive utilities, Inspired by Bootstrap.
//DO NOT EXTEND PUBLIC CLASSES. ONLY ABSTRACT ONES.
//Media queries needs polyfill in IE8

$rd-cols-number: 12 !default;
$rd-cols-gap: 10px !default;
$rd-xs-min-width: 320px !default; // Phone portrait minimum
$rd-sm-min-width: 480px !default; // Phone landscape minimum
$rd-md-min-width: 768px !default; // Tablet portrait minimum
$rd-lg-min-width: 992px !default; // Laptop+Desktop minimum
$rd-xl-min-width: 1200px !default; // Large screen minimum

$public-scaffolding: false !default; //Externalize col and row classes
$public-visibility: false !default; //Externalize visible and hidden classes

//The order of pairs in a map is always the same as when the map was created. Add items.
$rd-types: (
	xs: (min-width: $rd-xs-min-width),
	sm: (min-width: $rd-sm-min-width),
	md: (min-width: $rd-md-min-width),
	lg: (min-width: $rd-lg-min-width),
	xl: (min-width: $rd-xl-min-width)
) !default; // Responsive configuration

@include fwClass(clearfix, $public-scaffolding) {
	&:after {
	  content: "";
	  display: table;
	  clear: both;
	}
}

@include fwClass(row, $public-scaffolding) {
	@extend %clearfix;
	position: relative;
	//Universal selector is slow but reduces the CSS
	& > * {
		width: 100%;
		float: left;
		box-sizing: border-box; //Needs polyfill in IE7
		margin: 0;
		padding: 0;
	}
};

@include fwClass(row-gaps, $public-scaffolding) { 
	margin-left: -#{$rd-cols-gap};
	margin-right: -#{$rd-cols-gap};
	& > * {
		padding-left: $rd-cols-gap;
		padding-right: $rd-cols-gap;
	}
};

@include fwClass(hidden, $public-visibility) { display: none; };

@mixin visibilityHelper ($type) {
	@include fwClass(visible-#{$type}-block, $public-visibility) { display: block; };
	@include fwClass(visible-#{$type}, $public-visibility) { @extend %visible-#{$type}-block; };
	@include fwClass(visible-#{$type}-inline, $public-visibility) { display: inline; };
	@include fwClass(visible-#{$type}-inline-block, $public-visibility) { display: inline-block; };
	@include fwClass(hidden-#{$type}, $public-visibility) { display: none; };
}

@mixin scaffoldingHelper ($type) {

	@include fwClass(col-#{$type}-auto, $public-scaffolding) { width: auto; };

	@for $index from 1 through $rd-cols-number {
		$width: (100% / $rd-cols-number) * $index;
		
		@include fwClass(col-#{$type}-#{$index},$public-scaffolding) { width: $width; }
	
		@if ($width != 100%) {
			@include fwClass(offset-#{$type}-#{$index},$public-scaffolding) { margin-left: $width; }
		}
	}
}

@each $type, $cfg in $rd-types {
	$min-width: map-get($cfg, min-width);
	@media (min-width: $min-width) {
		
		@include visibilityHelper($type);
		@include scaffoldingHelper($type);
		
	}
}